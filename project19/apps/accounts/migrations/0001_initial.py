# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-01-18 18:53
from __future__ import unicode_literals

import apps.accounts.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_column='username', error_messages={'invalid': 'Enter a valid username.', 'unique': 'A user with this name already exists.'}, help_text='Required. 150 character or fewer. Letters, digits and ./-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('email', models.EmailField(db_column='email', error_messages={'invalid': 'Enter a valid email address.'}, help_text='Required.', max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='email')),
                ('first_name', models.CharField(blank=True, db_column='first_name', error_messages={'invalid': 'Enter a valid first name.'}, help_text='Not required. 30 character or fewer. Letters and - only.', max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, db_column='last_name', error_messages={'invalid': 'Enter a valid last name.'}, help_text='Not required. 150 character or fewer. Letters and - only.', max_length=150, verbose_name='last name')),
                ('avatar', models.ImageField(blank=True, db_column='avatar', error_messages={'invalid': 'Please choice a valid image format.'}, upload_to=apps.accounts.models.upload_avatar_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['dcx', 'iim', 'mpo', 'fli', 'im', 'mpg', 'ico', 'rgba', 'psd', 'j2k', 'j2c', 'webp', 'jpx', 'icns', 'jpc', 'pxr', 'png', 'fits', 'wmf', 'flc', 'ftc', 'fit', 'jfif', 'xpm', 'mpeg', 'cur', 'tif', 'dds', 'h5', 'ftu', 'hdf', 'pbm', 'pdf', 'jpf', 'msp', 'bufr', 'bmp', 'jpg', 'jpe', 'palm', 'ppm', 'pcx', 'sgi', 'gbr', 'bw', 'ps', 'grib', 'ras', 'pgm', 'jp2', 'xbm', 'gif', 'emf', 'tga', 'pcd', 'rgb', 'jpeg', 'tiff', 'eps'])], verbose_name='avatar')),
                ('rating', models.IntegerField(db_column='rating', default=0, verbose_name='rating')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_column='date_joined', verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='authentication.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='authentication.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
            },
        ),
    ]
